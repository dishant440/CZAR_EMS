{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useToast = () => {\n  _s();\n  const [toasts, setToasts] = useState([]);\n  const showToast = (message, type = 'success', duration = 3000) => {\n    const id = Date.now();\n    const newToast = {\n      id,\n      message,\n      type,\n      duration\n    };\n    setToasts(prev => [...prev, newToast]);\n  };\n  const removeToast = id => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n  return {\n    toasts,\n    showToast,\n    removeToast\n  };\n};\n_s(useToast, \"nD8TBOiFYf9ajstmZpZK2DP4rNo=\");","map":{"version":3,"names":["useState","useToast","_s","toasts","setToasts","showToast","message","type","duration","id","Date","now","newToast","prev","removeToast","filter","toast"],"sources":["C:/Users/Siddhi/Desktop/EMS/client/src/hooks/useToast.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const useToast = () => {\n  const [toasts, setToasts] = useState([]);\n\n  const showToast = (message, type = 'success', duration = 3000) => {\n    const id = Date.now();\n    const newToast = { id, message, type, duration };\n    \n    setToasts(prev => [...prev, newToast]);\n  };\n\n  const removeToast = (id) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n\n  return {\n    toasts,\n    showToast,\n    removeToast\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMK,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,SAAS,EAAEC,QAAQ,GAAG,IAAI,KAAK;IAChE,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACrB,MAAMC,QAAQ,GAAG;MAAEH,EAAE;MAAEH,OAAO;MAAEC,IAAI;MAAEC;IAAS,CAAC;IAEhDJ,SAAS,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,QAAQ,CAAC,CAAC;EACxC,CAAC;EAED,MAAME,WAAW,GAAIL,EAAE,IAAK;IAC1BL,SAAS,CAACS,IAAI,IAAIA,IAAI,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1D,CAAC;EAED,OAAO;IACLN,MAAM;IACNE,SAAS;IACTS;EACF,CAAC;AACH,CAAC;AAACZ,EAAA,CAnBWD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}